//
//  AuthorizationPresenter.swift
//  L-Tech-test
//
//  Created by Рамил Гаджиев on 20.10.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

protocol AuthorizationPresentationLogic {
    func presentUser(response: Authorization.fetchUser.Response)
    func presentMaskNumber(response: Authorization.getMaskNumber.Response)
    func presentErrorMaskNumberAlert(response:Authorization.getMaskNumber.Response)
    func presentErrorCheckUserAlert(response:Authorization.checkUser.Response)
    func readyToMove()
}

class AuthorizationPresenter: AuthorizationPresentationLogic {

    
    weak var viewController: AuthorizationDisplayLogic?
    
    func presentUser(response: Authorization.fetchUser.Response) {
        let viewModel = Authorization.fetchUser.ViewModel(number: format(phonenumber: response.user?.number ?? "", maskNumber:response.user?.maskNumber ?? MaskNumberModel(phoneMask: "")),
                                                          password: response.user?.password ?? "", maskNumber: response.user?.maskNumber?.phoneMask ?? "",
                                                          maskNumberModel: response.user?.maskNumber ?? MaskNumberModel(phoneMask: ""))
        viewController?.showUser(viewModel: viewModel)
    }
    
    func presentMaskNumber(response: Authorization.getMaskNumber.Response) {
        let maskNumber = MaskNumberModel(phoneMask: response.maskNumber?.phoneMask ?? "")
        let viewModel = Authorization.getMaskNumber.ViewModel(maskNumberModel: maskNumber, error: "")
        viewController?.showPhoneMask(viewModel: viewModel)
    }
    
    func presentErrorMaskNumberAlert(response: Authorization.getMaskNumber.Response) {
        let errorResponse = response.error?.localizedDescription ?? "Попробуйте перезапустить приложение"
        let viewModel = Authorization.getMaskNumber.ViewModel(maskNumberModel: response.maskNumber ?? MaskNumberModel(phoneMask: "") , error: errorResponse)
        viewController?.showErrorMaskNumberAlert(viewModel: viewModel)
    }
    
    func presentErrorCheckUserAlert(response: Authorization.checkUser.Response) {
        let response = response.error?.localizedDescription ?? "Произошла ошибка"
        let viewModel = Authorization.checkUser.ViewModel(error: response)
        viewController?.showErrorCheckUserAlert(viewModel: viewModel)
    }
    
    func readyToMove() {
        viewController?.readyToMove()
    }
}
